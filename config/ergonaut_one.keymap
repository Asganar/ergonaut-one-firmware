#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LGUI GRAVE          &kp Q  &kp W  &kp E               &kp R            &kp T        &kp Y        &kp U            &kp I                   &kp O    &kp P     &mt RGUI LEFT_BRACKET
&mt LEFT_ALT ESC        &kp A  &kp S  &kp D               &kp F            &kp G        &kp H        &kp J            &kp K                   &kp L    &kp SEMI  &mt RIGHT_ALT SQT
&mt LEFT_CONTROL MINUS  &kp Z  &kp X  &kp C               &kp V            &kp B        &kp N        &kp M            &kp COMMA               &kp DOT  &kp FSLH  &mt RIGHT_CONTROL BSLH
                                      &mt LEFT_SHIFT TAB  &lt 2 BACKSPACE  &lt 1 SPACE  &lt 2 ENTER  &lt 1 BACKSPACE  &mt RIGHT_SHIFT DELETE
            >;
        };

        raise_layer {
            bindings = <
&mt LGUI CAPS  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp LA(F4)  &kp C_VOL_UP  &kp PRINTSCREEN  &kp HOME     &kp UP_ARROW  &kp END    &kp KP_NUMLOCK   &kp BACKSPACE
&trans         &mkp RCLK   &kp RC(X)         &kp RC(C)   &kp RC(V)   &kp C_MUTE    &kp INSERT       &kp LEFT     &kp UP        &kp RIGHT  &kp SCROLLLOCK   &kp DEL
&trans         &kp KP_N0   &kp KP_N1         &kp KP_N2   &kp KP_N3   &kp C_VOL_DN  &kp K_CALC       &kp PAGE_UP  &kp RC(END)   &kp PG_DN  &kp PAUSE_BREAK  &kp K_APP
                                             &trans      &trans      &trans        &trans           &trans       &trans
            >;
        };

        lower_layer {
            bindings = <
&mt LGUI CAPSLOCK  &kp LS(N1)         &kp LS(N2)     &kp LS(N3)  &kp LS(N4)  &kp LS(N5)     &kp RS(N6)        &kp RS(N7)         &kp RS(N8)     &kp RS(N9)  &kp RS(N0)  &kp BACKSPACE
&kp LEFT_ALT       &kp N1             &kp N2         &kp N3      &kp N4      &kp N5         &kp N6            &kp N7             &kp N8         &kp N9      &kp N0      &kp RIGHT_ALT
&kp LEFT_CONTROL   &kp LS(BACKSLASH)  &kp LS(MINUS)  &kp EQUAL   &kp MINUS   &kp LS(EQUAL)  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &kp DOT     &kp SLASH   &kp RIGHT_CONTROL
                                                     &trans      &trans      &trans         &trans            &trans             &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &kp F1        &kp F2        &kp F3        &kp F4          &kp F5        &kp F6        &kp F7          &kp F8        &kp F9        &kp F10       &bootloader
&trans       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3    &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &kp F11
&trans       &sys_reset    &bootloader   &none         &bt BT_CLR_ALL  &bt BT_CLR    &bt BT_CLR    &bt BT_CLR_ALL  &none         &bootloader   &sys_reset    &kp F12
                                         &trans        &none           &trans        &none         &trans          &trans
            >;
        };
    };
};
